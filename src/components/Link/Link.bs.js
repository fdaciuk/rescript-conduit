// Generated by ReScript, PLEASE EDIT WITH CARE

import * as CssJs from "bs-css-emotion/src/CssJs.bs.js";
import * as Theme from "../../lib/Theme.bs.js";
import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

var link = CssJs.style([
      CssJs.fontFamily(Theme.fontFamily),
      CssJs.color(CssJs.hex(Theme.Colors.blue)),
      CssJs.fontSize(CssJs.rem(2.0)),
      CssJs.position(CssJs.relative),
      CssJs.cursor(CssJs.pointer),
      CssJs.zIndex(1),
      CssJs.background(CssJs.transparent),
      CssJs.transition(100, undefined, undefined, "color"),
      CssJs.padding(CssJs.px(2)),
      CssJs.after([
            CssJs.zIndex(-1),
            CssJs.contentRule({
                  NAME: "text",
                  VAL: " "
                }),
            CssJs.height(CssJs.px(2)),
            CssJs.width(CssJs.pct(100.0)),
            CssJs.background(CssJs.hex(Theme.Colors.blue)),
            CssJs.position(CssJs.absolute),
            CssJs.bottom(CssJs.px(-3)),
            CssJs.left(CssJs.zero),
            CssJs.transition(100, undefined, undefined, "height")
          ]),
      CssJs.hover([
            CssJs.transition(100, undefined, undefined, "color"),
            CssJs.color(CssJs.hex(Theme.Colors.white)),
            CssJs.after([
                  CssJs.transition(100, undefined, undefined, "height"),
                  CssJs.height(CssJs.pct(100.0))
                ])
          ])
    ]);

function Link(Props) {
  var href = Props.href;
  var children = Props.children;
  var tmp = {
    className: link
  };
  if (href !== undefined) {
    tmp.href = Caml_option.valFromOption(href);
  }
  return React.createElement("a", tmp, children);
}

var make = Link;

export {
  link ,
  make ,
  
}
/* link Not a pure module */
