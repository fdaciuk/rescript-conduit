// Generated by ReScript, PLEASE EDIT WITH CARE

import * as CssJs from "bs-css-emotion/src/CssJs.bs.js";
import * as Theme from "../../lib/Theme.bs.js";
import * as React from "react";

var h1 = CssJs.style([
      CssJs.fontSize(CssJs.rem(3.2)),
      CssJs.fontFamily(Theme.fontFamily),
      CssJs.fontWeight("bold"),
      CssJs.color(CssJs.hex(Theme.Colors.black))
    ]);

var h2 = CssJs.style([
      CssJs.fontSize(CssJs.rem(2.8)),
      CssJs.fontFamily(Theme.fontFamily),
      CssJs.fontWeight("bold"),
      CssJs.color(CssJs.hex(Theme.Colors.black))
    ]);

var text = CssJs.style([
      CssJs.fontSize(CssJs.rem(2.0)),
      CssJs.fontFamily(Theme.fontFamily),
      CssJs.letterSpacing(CssJs.em(-0.02)),
      CssJs.color(CssJs.hex(Theme.Colors.gray1))
    ]);

var Styles = {
  h1: h1,
  h2: h2,
  text: text
};

function Typography(Props) {
  var variantOpt = Props.variant;
  var levelOpt = Props.level;
  var children = Props.children;
  var variant = variantOpt !== undefined ? variantOpt : "text";
  var level = levelOpt !== undefined ? levelOpt : 1;
  if (variant === "title") {
    if (level === 2) {
      return React.createElement("h2", {
                  className: h2
                }, children);
    } else {
      return React.createElement("h1", {
                  className: h1
                }, children);
    }
  } else {
    return React.createElement("p", {
                className: text
              }, children);
  }
}

var make = Typography;

export {
  Styles ,
  make ,
  
}
/* h1 Not a pure module */
